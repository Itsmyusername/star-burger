# Generated by Django 3.2.15 on 2024-02-27 20:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        ('foodcartapp', '0047_remove_order_selected_restaurant'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderElements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Количество продуктов в заказе')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='цена')),
            ],
            options={
                'verbose_name': 'элемент заказа',
                'verbose_name_plural': 'элементы заказа',
            },
        ),
        migrations.RemoveField(
            model_name='order',
            name='payment_method',
        ),
        migrations.RemoveField(
            model_name='order',
            name='registrated_at',
        ),
        migrations.AddField(
            model_name='order',
            name='assigned_restaurant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='foodcartapp.restaurant', verbose_name='готовит ресторан'),
        ),
        migrations.AddField(
            model_name='order',
            name='created_at',
            field=models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, verbose_name='дата создания заказа'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment',
            field=models.CharField(choices=[('Электронные', 'Электронные'), ('Наличные', 'Наличные'), ('Не указан', 'Не указан')], db_index=True, default='Не указан', max_length=30, verbose_name='способ оплаты'),
        ),
        migrations.AlterField(
            model_name='order',
            name='called_at',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, null=True, verbose_name='дата звонка'),
        ),
        migrations.AlterField(
            model_name='order',
            name='comment',
            field=models.TextField(blank=True, verbose_name='комментарий'),
        ),
        migrations.AlterField(
            model_name='order',
            name='delivered_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='дата доставки'),
        ),
        migrations.AlterField(
            model_name='order',
            name='phonenumber',
            field=phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', verbose_name='контактный телефон'),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('Завершен', 'Завершен'), ('В пути', 'В пути'), ('Готовится', 'Готовится'), ('Принят', 'Принят'), ('Необработанный', 'Необработанный')], db_index=True, default='Необработанный', max_length=30, verbose_name='статус'),
        ),
        migrations.DeleteModel(
            name='OrderItem',
        ),
        migrations.AddField(
            model_name='orderelements',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='foodcartapp.order', verbose_name='заказ'),
        ),
        migrations.AddField(
            model_name='orderelements',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_elements', to='foodcartapp.product', verbose_name='товар'),
        ),
        migrations.AlterUniqueTogether(
            name='orderelements',
            unique_together={('order', 'product')},
        ),
    ]
